{"ast":null,"code":"var _jsxFileName = \"/Users/abdifatahdev/Desktop/React-world/Mosh/counter-app/src/components/counters.jsx\";\n// This component, we wanna render a list of counters:\nimport React, { Component } from \"react\";\nimport Counter from \"./counter\";\n\nclass Counters extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counters: [{\n        id: 1,\n        value: 0\n      }, {\n        id: 2,\n        value: 0\n      }, {\n        id: 3,\n        value: 0\n      }, {\n        id: 4,\n        value: 0\n      }]\n    };\n\n    this.handleDelete = () => {\n      console.log(\"Event Handler Clicked\");\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, this.state.counters.map(counter =>\n    /*#__PURE__*/\n    // Added this line (value={this.counter} selected={true}) to use props\n    React.createElement(Counter, {\n      key: counter.id,\n      onDelete: this.handleDelete,\n      value: counter.value,\n      selected: true,\n      id: counter.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Counters;\n/*The difference between Props and state:\nProps include data that we give component \nwhereas state includes data the is local or private to that component \nso the other components can't access that state, \nit's completely internal to that component only.\nAnother point is that props are immutable, they are read only, can't be changed*/","map":{"version":3,"sources":["/Users/abdifatahdev/Desktop/React-world/Mosh/counter-app/src/components/counters.jsx"],"names":["React","Component","Counter","Counters","state","counters","id","value","handleDelete","console","log","render","map","counter"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAI/BG,KAJ+B,GAIvB;AACNC,MAAAA,QAAQ,EAAE,CACR;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OADQ,EAER;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAFQ,EAGR;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAHQ,EAIR;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAJQ;AADJ,KAJuB;;AAAA,SAc/BC,YAd+B,GAchB,MAAM;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,KAhB8B;AAAA;;AAkB/BC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKP,KAAL,CAAWC,QAAX,CAAoBO,GAApB,CAAyBC,OAAD;AAAA;AACvB;AACA,wBAAC,OAAD;AACE,MAAA,GAAG,EAAEA,OAAO,CAACP,EADf;AAEE,MAAA,QAAQ,EAAE,KAAKE,YAFjB;AAGE,MAAA,KAAK,EAAEK,OAAO,CAACN,KAHjB;AAIE,MAAA,QAAQ,EAAE,IAJZ;AAKE,MAAA,EAAE,EAAEM,OAAO,CAACP,EALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CADH,CADF;AAcD;;AAjC8B;;AAoCjC,eAAeH,QAAf;AAEA","sourcesContent":["// This component, we wanna render a list of counters:\nimport React, { Component } from \"react\";\nimport Counter from \"./counter\";\n\nclass Counters extends Component {\n  // Instead of hard coding the Counter component,\n  //we can add array of counter object to our state property\n  //and render them using map() method:\n  state = {\n    counters: [\n      { id: 1, value: 0 },\n      { id: 2, value: 0 },\n      { id: 3, value: 0 },\n      { id: 4, value: 0 },\n    ],\n  };\n\n  // This is the rasing and handling delete event in th counter component\n  handleDelete = () => {\n    console.log(\"Event Handler Clicked\");\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.counters.map((counter) => (\n          // Added this line (value={this.counter} selected={true}) to use props\n          <Counter\n            key={counter.id}\n            onDelete={this.handleDelete}\n            value={counter.value}\n            selected={true}\n            id={counter.id}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Counters;\n\n/*The difference between Props and state:\nProps include data that we give component \nwhereas state includes data the is local or private to that component \nso the other components can't access that state, \nit's completely internal to that component only.\nAnother point is that props are immutable, they are read only, can't be changed*/\n"]},"metadata":{},"sourceType":"module"}