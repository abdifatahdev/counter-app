{"ast":null,"code":"var _jsxFileName = \"/Users/abdifatahdev/Desktop/React-world/Mosh/counter-app/src/App.js\";\nimport React from \"react\";\nimport NavBar from \"./components/navbar\";\nimport Counters from \"./components/counters\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      /*#__PURE__*/\n      // The reason we wrap React.Fragment is that we are returning multiple root elements from the render method\n      React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(NavBar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"main\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Counters, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }\n      })))\n    );\n  }\n\n}\n\nexport default App;\n/*Because there is no parent and child relationship between two component\nand you want to share data with them, WE NEED TO LIFT THE STATE\nUP to the main parent which app component so the other component \ncan have same parent, and the app component, we gonna have\nthe state so we can pass in all the children using PROPS*/","map":{"version":3,"sources":["/Users/abdifatahdev/Desktop/React-world/Mosh/counter-app/src/App.js"],"names":["React","NavBar","Counters","App","Component","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBC,SAAlB,CAA4B;AAC1BC,EAAAA,MAAM,GAAG;AACP;AAAA;AACE;AACA,0BAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF;AAFF;AASD;;AAXyB;;AAc5B,eAAeF,GAAf;AAEA","sourcesContent":["import React from \"react\";\nimport NavBar from \"./components/navbar\";\nimport Counters from \"./components/counters\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      // The reason we wrap React.Fragment is that we are returning multiple root elements from the render method\n      <React.Fragment>\n        <NavBar />\n        <main className=\"container\">\n          <Counters />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n\n/*Because there is no parent and child relationship between two component\nand you want to share data with them, WE NEED TO LIFT THE STATE\nUP to the main parent which app component so the other component \ncan have same parent, and the app component, we gonna have\nthe state so we can pass in all the children using PROPS*/\n"]},"metadata":{},"sourceType":"module"}