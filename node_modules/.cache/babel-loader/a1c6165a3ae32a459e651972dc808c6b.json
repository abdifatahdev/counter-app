{"ast":null,"code":"var _jsxFileName = \"/Users/abdifatahdev/Desktop/React-world/Mosh/counter-app/src/components/handlingEvents.jsx\";\nimport React, { Component } from \"react\";\n\nclass HandlingEvents extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 0,\n      tags: [\"tag1\", \"tag2\", \"tag3\"]\n    };\n  }\n\n  // To render element conditionally:\n  // depend on the state renderTags returns either a paragraph or a list of tags:\n  renderTags() {\n    if (this.state.tags.length === 0) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 46\n      }\n    }, \"There are no tags!\");\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }\n    }, this.state.tags.map(tag => /*#__PURE__*/React.createElement(\"li\", {\n      key: tag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }\n    }, tag)));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, this.state.tags.length === 0 && \"Please create a new tag!\", this.renderTags());\n  }\n\n}\n\nexport default HandlingEvents;","map":{"version":3,"sources":["/Users/abdifatahdev/Desktop/React-world/Mosh/counter-app/src/components/handlingEvents.jsx"],"names":["React","Component","HandlingEvents","state","count","tags","renderTags","length","map","tag","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,cAAN,SAA6BD,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCE,KADqC,GAC7B;AACNC,MAAAA,KAAK,EAAE,CADD;AAENC,MAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB;AAFA,KAD6B;AAAA;;AAMrC;AACA;AACAC,EAAAA,UAAU,GAAG;AACX,QAAI,KAAKH,KAAL,CAAWE,IAAX,CAAgBE,MAAhB,KAA2B,CAA/B,EAAkC,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AAClC,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKJ,KAAL,CAAWE,IAAX,CAAgBG,GAAhB,CAAqBC,GAAD,iBACnB;AAAI,MAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeA,GAAf,CADD,CADH,CADF;AAOD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG,KAAKP,KAAL,CAAWE,IAAX,CAAgBE,MAAhB,KAA2B,CAA3B,IAAgC,0BAFnC,EAGG,KAAKD,UAAL,EAHH,CADF;AAOD;;AA3BoC;;AA8BvC,eAAeJ,cAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass HandlingEvents extends Component {\n  state = {\n    count: 0,\n    tags: [\"tag1\", \"tag2\", \"tag3\"],\n  };\n\n  // To render element conditionally:\n  // depend on the state renderTags returns either a paragraph or a list of tags:\n  renderTags() {\n    if (this.state.tags.length === 0) return <p>There are no tags!</p>;\n    return (\n      <ul>\n        {this.state.tags.map((tag) => (\n          <li key={tag}>{tag}</li>\n        ))}\n      </ul>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        {/* Another way to render conditionally if our tags are empty */}\n        {this.state.tags.length === 0 && \"Please create a new tag!\"}\n        {this.renderTags()}\n      </div>\n    );\n  }\n}\n\nexport default HandlingEvents;\n"]},"metadata":{},"sourceType":"module"}