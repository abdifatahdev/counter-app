{"ast":null,"code":"var _jsxFileName = \"/Users/abdifatahdev/Desktop/React-world/Mosh/counter-app/src/components/counters.jsx\";\nimport React, { Component } from \"react\";\nimport Counter from \"./counter\"; //cc shortcut is for creating a class component\n//sfc short is fo creating a stateless functional component\n\nclass Counters extends Component {\n  render() {\n    //We can simplify the reference of this.props by using object destructing:\n    const {\n      onReset,\n      counters,\n      onDelete,\n      onIncrement\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      // this.handleReset method is no longer exist in this class, no it's part of its parent (app com)\n      // this.handleReset changed into this.props.onReset\n      //We can simplify the reference of this.props by using object destructing:\n      // this.props.onReset becomes only onReset in anywhere that has this.props will be removed\n      onClick: onReset,\n      className: \"btn btn-primary btn-sm m-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    }, \"Reset\"), this.props.counters.map(counter => /*#__PURE__*/React.createElement(Counter, {\n      key: counter.id // onDelete={this.handleDelete}\n      // onIncrement={this.handleIncrement}\n      //Updated the above references because Counter comp\n      //raises onDel and onInc events, and we are bubbling to app comp(parent)\n      //We aren't handling this event, we simply bubbling to its parent(app comp)\n      ,\n      onDelete: onDelete,\n      onIncrement: onIncrement,\n      counter: counter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Counters;","map":{"version":3,"sources":["/Users/abdifatahdev/Desktop/React-world/Mosh/counter-app/src/components/counters.jsx"],"names":["React","Component","Counter","Counters","render","onReset","counters","onDelete","onIncrement","props","map","counter","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CAEA;AACA;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC/BG,EAAAA,MAAM,GAAG;AACP;AACA,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,QAAX;AAAqBC,MAAAA,QAArB;AAA+BC,MAAAA;AAA/B,QAA+C,KAAKC,KAA1D;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE;AACA;AACA;AACA;AACA,MAAA,OAAO,EAAEJ,OALX;AAME,MAAA,SAAS,EAAC,4BANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAaG,KAAKI,KAAL,CAAWH,QAAX,CAAoBI,GAApB,CAAyBC,OAAD,iBACvB,oBAAC,OAAD;AACE,MAAA,GAAG,EAAEA,OAAO,CAACC,EADf,CAEE;AACA;AACA;AACA;AACA;AANF;AAOE,MAAA,QAAQ,EAAEL,QAPZ;AAQE,MAAA,WAAW,EAAEC,WARf;AASE,MAAA,OAAO,EAAEG,OATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAbH,CADF;AA6BD;;AAjC8B;;AAoCjC,eAAeR,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Counter from \"./counter\";\n\n//cc shortcut is for creating a class component\n//sfc short is fo creating a stateless functional component\n\nclass Counters extends Component {\n  render() {\n    //We can simplify the reference of this.props by using object destructing:\n    const { onReset, counters, onDelete, onIncrement } = this.props;\n    return (\n      <div>\n        <button\n          // this.handleReset method is no longer exist in this class, no it's part of its parent (app com)\n          // this.handleReset changed into this.props.onReset\n          //We can simplify the reference of this.props by using object destructing:\n          // this.props.onReset becomes only onReset in anywhere that has this.props will be removed\n          onClick={onReset}\n          className=\"btn btn-primary btn-sm m-2\"\n        >\n          Reset\n        </button>\n        {/* Since we no longer have state in this comp, we need to pass the list of counters by props */}\n        {/* this.state.counters becomes this.props.counters */}\n        {this.props.counters.map((counter) => (\n          <Counter\n            key={counter.id}\n            // onDelete={this.handleDelete}\n            // onIncrement={this.handleIncrement}\n            //Updated the above references because Counter comp\n            //raises onDel and onInc events, and we are bubbling to app comp(parent)\n            //We aren't handling this event, we simply bubbling to its parent(app comp)\n            onDelete={onDelete}\n            onIncrement={onIncrement}\n            counter={counter}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Counters;\n"]},"metadata":{},"sourceType":"module"}